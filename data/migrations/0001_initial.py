# Generated by Django 5.2 on 2025-05-04 17:24

import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Analyte',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, help_text='Primary name used internally or for default display.', max_length=150, unique=True, verbose_name='Analyte Name (Primary)')),
                ('name_en', models.CharField(blank=True, db_index=True, max_length=150, verbose_name='English Name')),
                ('name_ru', models.CharField(blank=True, db_index=True, max_length=150, verbose_name='Russian Name')),
                ('name_kk', models.CharField(blank=True, db_index=True, max_length=150, verbose_name='Kazakh Name')),
                ('abbreviations', models.CharField(blank=True, help_text='Common abbreviations, e.g., Hb, Hgb, HCT, Plt, АЛТ, АСТ, ТТГ', max_length=255, verbose_name='Abbreviations (comma-separated)')),
                ('unit', models.CharField(help_text='Default unit if not found in the report.', max_length=50, verbose_name='Standard Unit')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Analyte',
                'verbose_name_plural': 'Analytes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MedicalTestSubmission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('submission_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Submission Date')),
                ('test_date', models.DateField(blank=True, help_text='Date the test was performed, if known.', null=True, verbose_name='Test Date')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='User Notes')),
                ('uploaded_file', models.FileField(upload_to='medical_tests/%Y/%m/%d/', verbose_name='Uploaded File')),
                ('processing_status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], db_index=True, default='PENDING', max_length=20, verbose_name='Processing Status')),
                ('processing_details', models.TextField(blank=True, help_text='Logs or error messages from processing.', max_length=4000, null=True, verbose_name='Processing Details')),
                ('extracted_text', models.TextField(blank=True, help_text='Raw text extracted from the uploaded file.', null=True, verbose_name='Extracted Text')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Medical Test Submission',
                'verbose_name_plural': 'Medical Test Submissions',
                'ordering': ['-submission_date'],
            },
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('value', models.CharField(help_text='The exact value string found in the report.', max_length=100, verbose_name='Reported Value')),
                ('value_numeric', models.DecimalField(blank=True, decimal_places=4, help_text='Numeric representation of the value for calculations.', max_digits=14, null=True, verbose_name='Numeric Value')),
                ('unit', models.CharField(blank=True, help_text='Unit found in the report, might differ from standard.', max_length=50, verbose_name='Reported Unit')),
                ('reference_range', models.CharField(blank=True, help_text='Reference range string from the report.', max_length=150, null=True, verbose_name='Reference Range')),
                ('is_abnormal', models.BooleanField(blank=True, db_index=True, help_text='Indicates if the value falls outside the reference range.', null=True, verbose_name='Is Abnormal?')),
                ('extracted_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Extracted At')),
            ],
            options={
                'verbose_name': 'Test Result',
                'verbose_name_plural': 'Test Results',
                'ordering': ['submission__submission_date', 'analyte__name'],
            },
        ),
        migrations.CreateModel(
            name='TestType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Test Type Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Test Type',
                'verbose_name_plural': 'Test Types',
                'ordering': ['name'],
            },
        ),
    ]
